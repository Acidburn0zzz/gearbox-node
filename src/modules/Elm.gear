license {
    /*
     * Copyright (c) 2011 Sanjeev B.A.
     *
     * Permission to use, copy, modify, and distribute this software for any
     * purpose with or without fee is hereby granted, provided that the above
     * copyright notice and this permission notice appear in all copies.
     *
     * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
     * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
     * MERCHANTABILITY AND FITRTLSS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
     * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
     * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
     * ACTION OF CONTRACT, RTLGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
     * OR IN CONRTLCTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
     */
}

top {
    #include <Elementary.h>

    void close(void *data, Evas_Object *obj, void *event) {
        elm_exit();
    }
    
    void elmOnClick(void *_this, Evas_Object *eo, void *event_info) {
        (*reinterpret_cast<Value*>(_this))["_onClick"]();
    }

    void elmOnChanged(void *_this, Evas_Object *eo, void *event_info) {
        (*reinterpret_cast<Value*>(_this))["_onChanged"]();
    }
}

module Elm {

    function mainLoop() {
        ecore_main_loop_begin();
    }

    postSetup {
        eina_init();
        ecore_init();
        elm_init(0, NULL);
    }


    class EvasObject {

        get x() {
            Evas_Coord x, y, width, height;
            evas_object_geometry_get(this["eo"], &x, &y, &width, &height);
            return Number(x);
        }

        set x(_x) {
            Evas_Coord x, y, width, height;
            evas_object_geometry_get(this["eo"], &x, &y, &width, &height);
            evas_object_move(this["eo"], _x, y);
        }

        get y() {
            Evas_Coord x, y, width, height;
            evas_object_geometry_get(this["eo"], &x, &y, &width, &height);
            return Number(y);
        }

        set y(_y) {
            Evas_Coord x, y, width, height;
            evas_object_geometry_get(this["eo"], &x, &y, &width, &height);
            evas_object_move(this["eo"], x, _y);
        }

        get height() {
            Evas_Coord x, y, width, height;
            evas_object_geometry_get(this["eo"], &x, &y, &width, &height);
            return Number(height);
        }

        set height(_height) {
            Evas_Coord x, y, width, height;
            evas_object_geometry_get(this["eo"], &x, &y, &width, &height);
            evas_object_resize(this["eo"], width, _height);
        }

        get width() {
            Evas_Coord x, y, width, height;
            evas_object_geometry_get(this["eo"], &x, &y, &width, &height);
            return Number(width);
        }

        set width(_width) {
            Evas_Coord x, y, width, height;
            evas_object_geometry_get(this["eo"], &x, &y, &width, &height);
            evas_object_resize(this["eo"], _width, height);
        }

        get label() {
            return String(elm_object_text_get(this["eo"]));
        }

        set label(label) {
            elm_object_text_set(this["eo"], label.to<String>());
        }

        get text() {
            return String(elm_object_text_get(this["eo"]));
        }

        set text(text) {
            elm_object_text_set(this["eo"], text.to<String>());
        }

        get scale() {
            return Number(elm_object_scale_get(this["eo"]));
        }

        set scale(scale) {
            elm_object_scale_set(this["eo"], scale);
        }

        get xalign() {
            double x, y;
            evas_object_size_hint_align_get(this["eo"], &x, &y);
            return Number(x);
        }

        set xalign(_x) {
            double x, y;
            evas_object_size_hint_align_get(this["eo"], &x, &y);
            evas_object_size_hint_align_set(this["eo"], _x, y);
        }

        get yalign() {
            double x, y;
            evas_object_size_hint_align_get(this["eo"], &x, &y);
            return Number(y);
        }

        set yalign(_y) {
            double x, y;
            evas_object_size_hint_align_get(this["eo"], &x, &y);
            evas_object_size_hint_align_set(this["eo"], x, _y);
        }

        get style() {
            return String(elm_object_style_get(this["eo"]));
        }

        set style(style) {
            elm_object_style_set(this["eo"], style.to<String>());
        }

        get visible() {
             return Value(evas_object_visible_get(this["eo"]));
        }

        set visible(visible) {
            if(visible)
                evas_object_show(this["eo"]);
            else
                evas_object_hide(this["eo"]);
        }

    }

    class Win : EvasObject {

        function Win(parent, title) {
            this["eo"] = elm_win_add(NULL, title.to<String>(), ELM_WIN_BASIC);
            evas_object_smart_callback_add(this["eo"], "delete,request", close, NULL);
            evas_object_show(this["eo"]);
        }

        function resize(width, height) {
            evas_object_resize(this["eo"], width, height);
        }

        get title() {
            return String(elm_win_title_get(this["eo"]));
        }

        set title(title) {
            elm_win_title_set(this["eo"], title.to<String>());
        }

        get autodel() {
            bool _autodel = elm_win_autodel_get(this["eo"]);
            return Value(_autodel);
        }

        set autodel(_autodel) {
            elm_win_autodel_set(this["eo"], _autodel);
        }

    }

    class Background : EvasObject {

        function Background(parent, file, group) {
            this["eo"] = elm_bg_add(parent["eo"]);
            elm_bg_file_set(this["eo"], file.to<String>(), group.to<String>());
            evas_object_size_hint_weight_set(this["eo"], EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
            elm_win_resize_object_add(parent["eo"], this["eo"]);
            evas_object_show(this["eo"]);
        }

        get red() {
            int r;
            elm_bg_color_get(this["eo"], &r, NULL, NULL);
            return Integer(r);
        }

        set red(_r) {
            int r, g, b;
            elm_bg_color_get(this["eo"], &r, &g, &b);
            elm_bg_color_set(this["eo"], _r, g, b);
        }

        get green() {
            int g;
            elm_bg_color_get(this["eo"], NULL, &g, NULL);
            return Integer(g);
        }

        set green(_g) {
            int r, g, b;
            elm_bg_color_get(this["eo"], &r, &g, &b);
            elm_bg_color_set(this["eo"], r, _g, b);
        }

        get blue() {
            int b;
            elm_bg_color_get(this["eo"], NULL, NULL, &b);
            return Integer(b);
        }

        set blue(_b) {
            int r, g, b;
            elm_bg_color_get(this["eo"], &r, &g, &b);
            elm_bg_color_set(this["eo"], r, g, _b);
        }

        get file() {
            const char *file, *group;
            elm_bg_file_get(this["eo"], &file, &group);
            return String(file);
        }

        set file(file) {
            elm_bg_file_set(this["eo"], file.to<String>(), NULL);
        }
        
        get group() {
            const char *file, *group;
            elm_bg_file_get(this["eo"], &file, &group);
            return String(group);
        }
        
        set group(group) {
            elm_bg_file_set(this["eo"], NULL, group.to<String>());
        }
        
        get bgOption() {
            int option;
            option = elm_bg_option_get(this["eo"]);
            return Integer(option); 
        }
        
        set bgOption(_option) {
            Elm_Bg_Option _opt = (Elm_Bg_Option)(_option.to<int>());
            elm_bg_option_set(this["eo"], _opt);
        }
    }

    class Box : EvasObject {
        function Box(parent) {
            this["eo"] = elm_box_add(parent["eo"]);
            evas_object_size_hint_weight_set(this["eo"], EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
            evas_object_show(this["eo"]);
        }

        function add(child) {
            elm_box_pack_end(this["eo"], child["eo"]);
        }

        get homogenous() {
            return Value(elm_box_homogeneous_get(this["eo"]));
        }

        set homogenous(homogenous) {
            elm_box_homogeneous_set(this["eo"], homogenous);
        }

        get horizontal() {
            return Value(elm_box_horizontal_get(this["eo"]));
        }

        set horizontal(horizontal) {
            elm_box_horizontal_set(this["eo"], horizontal);
        }

    }

    class Icon : EvasObject {
        function Icon(parent, file) {
            this["eo"] = elm_icon_add(parent["eo"]);
            elm_icon_file_set(this["eo"], file.to<String>(), NULL);
            evas_object_show(this["eo"]);
        }

        get file() {
            const char *file, *group;
            elm_icon_file_get(this["eo"], &file, &group);
            return String(file);
        }

        set file(file) {
            elm_icon_file_set(this["eo"], file.to<String>(), NULL);
        }

        get scaleDown() {
            Eina_Bool sd, su;
            elm_icon_scale_get(this["eo"], &su, &sd);
            return Integer(sd);
        }

        set scaleDown(_sd) {
            Eina_Bool sd, su;
            elm_icon_scale_get(this["eo"], &su, &sd);
            elm_icon_scale_set(this["eo"], su, _sd);
        }

        get scaleUp() {
            Eina_Bool sd, su;
            elm_icon_scale_get(this["eo"], &su, &sd);
            return Integer(su);
        }

        set scaleUp(_su) {
            Eina_Bool sd, su;
            elm_icon_scale_get(this["eo"], &su, &sd);
            elm_icon_scale_set(this["eo"], _su, sd);
        }

        get prescale() {
            return Integer(elm_icon_prescale_get(this["eo"]));
        }

        set prescale(_arit) {
            elm_icon_prescale_set(this["eo"], _arit);
        }

        get animated() {
            return Integer(elm_icon_animated_get(this["eo"]));
        }

        set animated(_anim) {
            elm_icon_animated_set(this["eo"], _anim);
        }

        get animPlay() {
            return Integer(elm_icon_animated_play_get(this["eo"]));
        }

        set animPlay(_ap) {
            elm_icon_animated_play_set(this["eo"], _ap);
        }

        get smooth() {
            return Integer(elm_icon_smooth_get(this["eo"]));
        }

        set smooth(_smooth) {
            elm_icon_smooth_set(this["eo"], _smooth);
        }

        get standard() {
            return String(elm_icon_standard_get(this["eo"]));
        }

        set standard(_std) {
            elm_icon_standard_set(this["eo"],_std);
        }

        get fillOutside() {
            return Integer(elm_icon_fill_outside_get(this["eo"]));
        }

        set fillOutside(_fo) {
            elm_icon_fill_outside_set(this["eo"], _fo);
        }

    }

    class Button : EvasObject {

        function Button(parent) {
            this["eo"] = elm_button_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }

        get autorepeat() {
            bool autorepeat = elm_button_autorepeat_get(this["eo"]);
            return Integer(autorepeat);
        }

        set autorepeat(autorepeat) {
            elm_button_autorepeat_set(this["eo"], autorepeat);
        }

        get autorepeatInitTimeout() {
            double arit = elm_button_autorepeat_initial_timeout_get(this["eo"]);
            return Number(arit);
        }

        set autorepeatInitTimeout(_arit) {
            elm_button_autorepeat_initial_timeout_set(this["eo"], _arit);
        }

        get autorepeatGapTimeout() {
            double argt = elm_button_autorepeat_gap_timeout_get(this["eo"]);
            return Number(argt);
        }

        set autorepeatGapTimeout(_argt) {
            elm_button_autorepeat_gap_timeout_set(this["eo"], _argt);
        }

        set onClick(arg) {
            this["_onClick"] = arg;
            evas_object_smart_callback_add(this["eo"], "clicked", elmOnClick, new Value(this));
        }

        get onClick() {
            return this["_onClick"];
        }
    }

    class Radio : EvasObject {
        
        function Radio(parent) {
            this["eo"] = elm_radio_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }

        get group() {
            // TODO : Not implemented in EFL
            //elm_radio_group_get(this["eo"]);
            return this["eo"];
        }
        
        set group(group) {
            elm_radio_group_add(this["eo"], group["eo"]);
        }

        get state() {
            int state = elm_radio_state_value_get(this["eo"]);
            return Integer(state);
        }

        set state(_state) {
            elm_radio_state_value_set(this["eo"], _state);
        }

        get value() {
            int value = elm_radio_value_get(this["eo"]);
            return Integer(value);
        }

        set value(_value) {
            elm_radio_value_set(this["eo"], _value);
        }
        
    }
    
    class Label : EvasObject {

        function Label(parent) {
            this["eo"] = elm_label_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }

        get wrap() {
            int wrap = elm_label_line_wrap_get (this["eo"]);
            return Integer(wrap);
        }

        set wrap(_wrap) {
            Elm_Wrap_Type _wt = (Elm_Wrap_Type)(_wrap.to<int>());
            elm_label_line_wrap_set(this["eo"], _wt);
        }

        get wrapWidth() {
            Evas_Coord w = elm_label_wrap_width_get (this["eo"]);
            return Integer(w);
        }

        set wrapWidth(_wrap) {
            elm_label_wrap_width_set(this["eo"], (Evas_Coord)(_wrap));
        }

        get wrapHeight() {
            Evas_Coord h = elm_label_wrap_height_get (this["eo"]);
            return Integer(h);
        }

        set wrapHeight(_height) {
            elm_label_wrap_height_set(this["eo"], (Evas_Coord)(_height));
        }

        get fontSize() {
            int fs = 0;
            // TODO : Not implemented in EFL
            //elm_label_fontsize_get(this["eo"], &fs);
            return Integer(fs);
        }

        set fontSize(_fs) {
            elm_label_fontsize_set(this["eo"], _fs);
        }

        get textAlign() {
            // TODO : Not implemented in EFL
            return String("center");
        }

        set textAlign(_align) {
            elm_label_text_align_set(this["eo"],_align);
        }

        get ellipsis() {
            // TODO : Not implemented in EFL
            //bool ellipsis = elm_label_ellipsis_get(this["eo"]);
            return Value(false);
        }

        set ellipsis(_ellipsis) {
            elm_label_ellipsis_set(this["eo"], _ellipsis);
        }

    }

    class Flip : EvasObject {

        function Flip(parent) {
            this["eo"] = elm_flip_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }

        get front() {
            return Value(elm_flip_content_front_get(this["eo"]));
        }

        set front(_front) {
            elm_flip_content_front_set(this["eo"], _front);
        }

        get back() {
            return Value(elm_flip_content_back_get(this["eo"]));
        }

        set back(_back) {
            elm_flip_content_back_set(this["eo"], _back);
        }

        function go(mode) {
            elm_flip_go(this["eo"], (Elm_Flip_Mode)(mode.to<int>()));
        }

        get interaction() {
            return Integer(elm_flip_interaction_get(this["eo"]));
        }
        
        set interaction(_interact) {
            elm_flip_interaction_set (this["eo"], (Elm_Flip_Interaction)(_interact.to<int>()));
        }

    }

    class ActionSlider : EvasObject {

        function ActionSlider(parent) {
            this["eo"] = elm_actionslider_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }

        get selectedLabel() {
            return String(elm_actionslider_selected_label_get(this["eo"]));
        }

        set selectedLabel(_sl) {
            // TODO : Not implemented in EFL
        }

        get indicatorPos() {
            return Integer(elm_actionslider_indicator_pos_get(this["eo"]));
        }

        set indicatorPos(_ip) {
            elm_actionslider_indicator_pos_set(this["eo"], (Elm_Actionslider_Pos)(_ip.to<int>()));
        }

        get enabledPos() {
            return Integer(elm_actionslider_enabled_pos_get(this["eo"]));
        }

        set enabledPos(_ip) {
            elm_actionslider_enabled_pos_set(this["eo"], (Elm_Actionslider_Pos)(_ip.to<int>()));
        }

        get magnetPos() {
            return Integer(elm_actionslider_magnet_pos_get(this["eo"]));
        }

        set magnetPos(_ip) {
            elm_actionslider_magnet_pos_set(this["eo"], (Elm_Actionslider_Pos)(_ip.to<int>()));
        }

    }

    class Scroller : EvasObject {

        function Scroller(parent) {
            this["eo"] = elm_scroller_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }

        get content() {
            return Value(elm_scroller_content_get(this["eo"]));
        }

        set content(_content) {
            elm_scroller_content_set(this["eo"], _content["eo"]);
        }

        get hBounce() {
            Eina_Bool hb, vb;
            elm_scroller_bounce_get(this["eo"], &hb, &vb);
            return Integer(hb);
        }

        set hBounce(_hb) {
            Eina_Bool hb, vb;
            elm_scroller_bounce_get(this["eo"], &hb, &vb);
            elm_scroller_bounce_set(this["eo"], _hb.to<int>(), vb);
        }

        get vBounce() {
            Eina_Bool hb, vb;
            elm_scroller_bounce_get(this["eo"], &hb, &vb);
            return Integer(vb);
        }

        set vBounce(_vb) {
            Eina_Bool hb, vb;
            elm_scroller_bounce_get(this["eo"], &hb, &vb);
            elm_scroller_bounce_set(this["eo"], hb, _vb.to<int>());
        }

        get xPolicy() {
            Elm_Scroller_Policy xp, yp;
            elm_scroller_policy_get(this["eo"], &xp, &yp);
            return Integer(xp);
        }

        set xPolicy(_xp) {
            Elm_Scroller_Policy xp, yp;
            elm_scroller_policy_get(this["eo"], &xp, &yp);
            elm_scroller_policy_set(this["eo"], (Elm_Scroller_Policy)(_xp.to<int>()), yp);
        }

        get yPolicy() {
            Elm_Scroller_Policy xp, yp;
            elm_scroller_policy_get(this["eo"], &xp, &yp);
            return Integer(yp);
        }

        set yPolicy(_yp) {
            Elm_Scroller_Policy xp, yp;
            elm_scroller_policy_get(this["eo"], &xp, &yp);
            elm_scroller_policy_set(this["eo"], xp, (Elm_Scroller_Policy)(_yp.to<int>()));
        }

    }

    class Slider : EvasObject {

        function Slider(parent) {
            this["eo"] = elm_slider_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }

    }

    class List : EvasObject {

        function List(parent) {
            this["eo"] = elm_list_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }

    }

    class Check : EvasObject {

        function Check(parent) {
            this["eo"] = elm_check_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }

        get state() {
            return Integer(elm_check_state_get(this["eo"]));
        }

        set state(_state) {
            elm_check_state_set(this["eo"], _state.to<Eina_Bool>());
        }
    }

    class Clock : EvasObject {

        function Clock(parent) {
            this["eo"] = elm_clock_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }

        get hour() {
            int h,m,s;
            elm_clock_time_get(this["eo"], &h, &m, &s);
            return Integer(h);
        }

        set hour(_h) {
            int h,m,s;
            elm_clock_time_get(this["eo"], &h, &m, &s);
            elm_clock_time_set(this["eo"], _h.to<int>(), m, s); 
        }

        get minute() {
            int h,m,s;
            elm_clock_time_get(this["eo"], &h, &m, &s);
            return Integer(m);
        }

        set minute(_m) {
            int h,m,s;
            elm_clock_time_get(this["eo"], &h, &m, &s);
            elm_clock_time_set(this["eo"], h, _m.to<int>(), s); 
        }

        get second() {
            int h,m,s;
            elm_clock_time_get(this["eo"], &h, &m, &s);
            return Integer(s);
        }

        set second(_s) {
            int h,m,s;
            elm_clock_time_get(this["eo"], &h, &m, &s);
            elm_clock_time_set(this["eo"], h, m, _s.to<int>());
        }

        get edit() {
            Eina_Bool ed;
            return Integer(elm_clock_edit_get(this["eo"]));
        }

        set edit(_ed) {
            elm_clock_edit_set(this["eo"], _ed.to<Eina_Bool>());
        }

        get digitEdit() {
            return Integer(elm_clock_digit_edit_get(this["eo"]));
        }

        set digitEdit(_de) {
            elm_clock_digit_edit_set(this["eo"], (Elm_Clock_Digedit)(_de.to<int>()));
        }

        get showAMPM() {
            return Integer(elm_clock_show_am_pm_get(this["eo"]));
        }

        set showAMPM(_ampm) {
            elm_clock_show_am_pm_set(this["eo"], (Elm_Clock_Digedit)(_ampm.to<int>()));
        }

        get showSeconds() {
            return Integer(elm_clock_show_seconds_get(this["eo"]));
        }

        set showSeconds(_secs) {
            elm_clock_show_seconds_set(this["eo"], _secs.to<Eina_Bool>());
        }

        get interval() {
            return Number(elm_clock_interval_get(this["eo"]));
        }

        set interval(_intvl) {
            elm_clock_interval_set(this["eo"], (double)(_intvl.to<int>()));
        }

    }

    class ProgressBar : EvasObject {

        function ProgressBar(parent) {
            this["eo"] = elm_progressbar_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }

        get pulse() {
            return Integer(elm_progressbar_pulse_get(this["eo"]));
        }

        set pulse(_pulse) {
            elm_progressbar_pulse_set(this["eo"], _pulse.to<Eina_Bool>());
        }

        get value() {
            return Integer(elm_progressbar_value_get(this["eo"]));
        }

        set value(_value) {
            elm_progressbar_value_set(this["eo"], (double)(_value.to<int>()));
        }

        get spanSize() {
            return Integer(elm_progressbar_span_size_get(this["eo"]));
        }

        set spanSize(_ss) {
            elm_progressbar_span_size_set(this["eo"], (Evas_Coord)(_ss.to<int>()));
        }

        get unitFormat() {
            return String(elm_progressbar_unit_format_get(this["eo"]));
        }

        set unitFormat(_value) {
            elm_progressbar_unit_format_set(this["eo"], _value);
        }

        get horizontal() {
            return Integer(elm_progressbar_horizontal_get(this["eo"]));
        }

        set horizontal(_value) {
            elm_progressbar_horizontal_set(this["eo"], _value.to<Eina_Bool>());
        }

        get inverted() {
            return Integer(elm_progressbar_inverted_get(this["eo"]));
        }

        set inverted(_value) {
            elm_progressbar_inverted_set(this["eo"], _value.to<Eina_Bool>());
        }
    }

    class Photo : EvasObject {

        function Photo(parent) {
            this["eo"] = elm_photo_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }

        get image() {
            // TODO : Not implemented in EFL
            return String("");
        }

        set image(_image) {
            elm_photo_file_set(this["eo"], _image);
        }

        get size() {
            // TODO : Not implemented in EFL
            return Integer(0);
        }

        set size(_value) {
            elm_photo_size_set(this["eo"], (_value.to<int>()));
        }

        get fill() {
            // TODO : Not implemented in EFL
            return Integer(0);
        }

        set fill(_value) {
            elm_photo_fill_inside_set(this["eo"], _value.to<Eina_Bool>());
        }

        get editable() {
            // TODO : Not implemented in EFL
            return Integer(0);
        }

        set editable(_value) {
            elm_photo_editable_set(this["eo"], _value.to<Eina_Bool>());
        }

    }

    class Spinner : EvasObject {

        function Spinner(parent) {
            this["eo"] = elm_spinner_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }

        get labelFormat() {
            return String(elm_spinner_label_format_get(this["eo"]));
        }

        set labelFormat(_value) {
            elm_spinner_label_format_set(this["eo"], _value);
        }

        get min() {
            double min, max;
            elm_spinner_min_max_get(this["eo"], &min, &max);
            return Number(min);
        }

        set min(_min) {
            double min, max;
            elm_spinner_min_max_get(this["eo"], &min, &max);
            elm_spinner_min_max_set(this["eo"], _min, max);
        }

        get max() {
            double min, max;
            elm_spinner_min_max_get(this["eo"], &min, &max);
            return Number(max);
        }

        set max(_max) {
            double min, max;
            elm_spinner_min_max_get(this["eo"], &min, &max);
            elm_spinner_min_max_set(this["eo"], min, _max);
        }

        get step() {
            return Number(elm_spinner_step_get(this["eo"]));
        }

        set step(_step) {
            elm_spinner_step_set(this["eo"], (double)(_step.to<int>()));
        }

        get value() {
            return Number(elm_spinner_value_get(this["eo"]));
        }

        set value(_value) {
            elm_spinner_value_set(this["eo"], (double)(_value.to<int>()));
        }

        get wrap() {
            return Integer(elm_spinner_wrap_get(this["eo"]));
        }

        set wrap(_wrap) {
            elm_spinner_wrap_set(this["eo"], _wrap.to<Eina_Bool>());
        }

        get editable() {
            return Integer(elm_spinner_editable_get(this["eo"]));
        }

        set editable(_editable) {
            elm_spinner_editable_set(this["eo"], _editable.to<Eina_Bool>());
        }

        get interval() {
            return Number(elm_spinner_interval_get(this["eo"]));
        }

        set interval(_interval) {
            elm_spinner_interval_set(this["eo"], _interval.to<double>());
        }

    }

    class Pane : EvasObject {

        function Pane(parent) {
            this["eo"] = elm_panes_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }

        get contentLeft() {
            return Value(elm_panes_content_left_get(this["eo"]));
        }

        set contentLeft(_left) {
            elm_panes_content_left_set(this["eo"], _left["eo"]);
        }

        get contentRight() {
            return Value(elm_panes_content_right_get(this["eo"]));
        }

        set contentRight(_right) {
            elm_panes_content_right_set(this["eo"], _right["eo"]);
        }

        get leftSize() {
            return Number(elm_panes_content_left_size_get(this["eo"]));
        }

        set leftSize(_ls) {
            elm_panes_content_left_size_set(this["eo"], (double)(_ls.to<int>()));
        }

        get horizontal() {
            return Number(elm_panes_horizontal_get(this["eo"]));
        }

        set leftSize(_h) {
            elm_panes_horizontal_set(this["eo"], (double)(_h.to<int>()));
        }

    }

    class Bubble : EvasObject {

        function Bubble(parent) {
            this["eo"] = elm_bubble_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }
        
        get content() {
            return Value(elm_bubble_content_get(this["eo"]));
        }

        set content(_c) {
            elm_bubble_content_set(this["eo"], _c["eo"]);
        }
        
        get corner() {
            return String(elm_bubble_corner_get(this["eo"]));
        }

        set corner(_c) {
            elm_bubble_corner_set(this["eo"], _c.to<String>());
        }

    }

    class ColorSelector : EvasObject {
    
        function ColorSelector(parent) {
            this["eo"] = elm_colorselector_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }

        get red() {
            int r;
            elm_colorselector_color_get(this["eo"], &r, NULL, NULL, NULL);
            return Integer(r);
        }

        set red(_r) {
            int r, g, b, a;
            elm_colorselector_color_get(this["eo"], &r, &g, &b, &a);
            elm_colorselector_color_set(this["eo"], _r, g, b, a);
        }

        get green() {
            int g;
            elm_colorselector_color_get(this["eo"], NULL, &g, NULL, NULL);
            return Integer(g);
        }

        set green(_g) {
            int r, g, b, a;
            elm_colorselector_color_get(this["eo"], &r, &g, &b, &a);
            elm_colorselector_color_set(this["eo"], r, _g, b, a);
        }

        get blue() {
            int b;
            elm_colorselector_color_get(this["eo"], NULL, NULL, &b, NULL);
            return Integer(b);
        }

        set blue(_b) {
            int r, g, b, a;
            elm_colorselector_color_get(this["eo"], &r, &g, &b, &a);
            elm_colorselector_color_set(this["eo"], r, g, _b, a);
        }

        get alpha() {
            int a;
            elm_colorselector_color_get(this["eo"], NULL, NULL, NULL, &a);
            return Integer(a);
        }

        set alpha(_a) {
            int r, g, b, a;
            elm_colorselector_color_get(this["eo"], &r, &g, &b, &a);
            elm_colorselector_color_set(this["eo"], r, g, b, _a);
        }

        set onChanged(arg) {
            this["_onChanged"] = arg;
            evas_object_smart_callback_add(this["eo"], "changed", elmOnChanged, new Value(this));
        }

        get onChanged() {
            return this["_onChanged"];
        }

    } 

    class Calendar : EvasObject {

        function Calendar(parent) {
            this["eo"] = elm_calendar_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }
    }

    class Entry : EvasObject {

        function Entry(parent) {
            this["eo"] = elm_entry_add(parent["eo"]);
            evas_object_show(this["eo"]);
        }

        set entry(text) {
            this["entry"] = text;
            elm_entry_entry_set(this["eo"], text);
        }

        get entry() {
            const char *entry;
            entry = elm_entry_entry_get(this["eo"]);
            return String(entry);
        }

    }
}
