native {
    #include <my_global.h>
    #include <mysql.h>
    
    #include "MySQL.h"
    #include "../shell.h"
}

namespace MySQL {
    class Connection {
        native MYSQL *pMYSQL;
        
        function Connection(String host, String user, String password, String db) {
            this.pMYSQL = mysql_init(NULL);
            mysql_real_connect(this.pMYSQL, host, user, password, db, 0, NULL, 0);
        }
        
        function query(String query) {
            v8::Handle<v8::Object> pQuery = v8::Array::New();
            
            if(mysql_query(this.pMYSQL, query))
                V8Throw(mysql_error(this.pMYSQL));
            MYSQL_RES *pResult = mysql_store_result(this.pMYSQL);
            MYSQL_ROW pRow;
            
            while((pRow = mysql_fetch_row(pResult))) {
                v8::Handle<v8::Object> pHash = v8::Object::New();
                mysql_field_seek(pResult, 0);
                for(size_t i = 0; i < mysql_num_fields(pResult); i++) {
                    MYSQL_FIELD *pColumn = mysql_fetch_field(pResult);
                    const char *pValue = pRow[i] ? pRow[i] : "";
                    switch(pColumn->type) {
                        case MYSQL_TYPE_DECIMAL:
                        case MYSQL_TYPE_TINY:
                        case MYSQL_TYPE_SHORT:
                        case MYSQL_TYPE_LONG:
                        case MYSQL_TYPE_FLOAT:
                        case MYSQL_TYPE_DOUBLE:
                        case MYSQL_TYPE_LONGLONG:
                            pHash->V8Set(pColumn->name, v8::Local<v8::Number>::Cast(v8::String::New(pValue)));
                            break;
                        default:
                            pHash->V8Set(pColumn->name, v8::String::New(pValue));
                    }
                }
                V8FuncCall(pQuery, pQuery->V8Get("push"), pHash);
            }
            mysql_free_result(pResult);
            return pQuery;
        }
    }
}
